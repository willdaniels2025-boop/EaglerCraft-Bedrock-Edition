name: Android CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Extract version from Git tag
        if: startsWith(github.ref, 'refs/tags/')
        id: version
        run: |
          TAG="${GITHUB_REF#refs/tags/}"   # e.g. v1.2.0
          VERSION_NAME="${TAG#v}"          # strip leading v -> 1.2.0
          VERSION_CODE=$(echo $VERSION_NAME | awk -F. '{ printf("%d%03d%03d", $1,$2,$3) }')

          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew assembleRelease -PVERSION_NAME=${{ env.VERSION_NAME }} -PVERSION_CODE=${{ env.VERSION_CODE }}

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename APK
        run: |
          mkdir -p release
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            cp app/build/outputs/apk/release/app-release-unsigned-signed.apk release/release.apk
          else
            cp app/build/outputs/apk/release/app-release-unsigned-signed.apk release/release-beta.apk
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: EaglercraftMobile-APK
          path: release/*.apk

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: release/release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
